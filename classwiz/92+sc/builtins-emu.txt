# Library builtins and BL-able addresses (functions).
# Does NOT include gadgets.

# Arguments are 0-indexing.
# All lines with '#' won't match the Lua pattern so they're effectively
# comments. Comment for something is put **after** it.

# ========= Library function

f_0F726		strcpy_nn
f_33864		strcat_nn
f_2B2A4		strlen_f
f_22294		memset_f
f_27568		memcpy_nf
f_32C74		strcat_fn
f_283AC		memcpy_nn
f_0A66E		memmove_nn
f_2904E		memcpy_fn
f_2B4E4		strlen_n
f_0F3C8		abs
f_0EC0A		strcpy_fn
f_21E36		memset_n

# ========= Smart functions (special case NULL)

f_203C2		smart_strcpy_nn
# copy to NULL = no-op, copy from NULL = ""
f_203B8		smart_strlen_n
# len(NULL) == 0

# ========= Calculator functions

f_08598		1line_print
# r0: col, r1: row, er2: address
.l_002		1line_print.col_0
f_08A8C		render.e3d4
.l_00C		render.ddd4
# copy content at (position) to screen
f_0939A		memzero
# at er0, er2 bytes, call memset
f_2157C		1line_print__size_14
# er2: adr, xpos = 0, ypos = r0; call 1line_print.col_0
# ???
f_26606		probably reset routine
f_24A3A		get_string_constant
# It appears that only [0xd12b]==0 makes sense
# Run `extract-table.py`. Decompiled.
f_2CFE0		f_2CFE0
.l_030		get_string_and_length
# from string index


f_2140C		diagnostic_function
f_25604		diagnostic_section
# a section of diagnostic procedure

f_0AFEC		f_0AFEC
.l_058		wait_key

f_acaa		ENTER
# backup registers, set frame pointer er14
f_acb2		LEAVE
# restore registers
# Usage: 'bl ENTER; ......; b LEAVE;'

# ========= Functions with not enough information

#f_0851E		Huge function allocate lots of mem. Default arg r0=0.
#f_08FB0		something call 851e
#f_09006		1 line print ??? or what? what's the difference with 8598 ?
#f_09028		Probably configure font size?
#f_09086		something call 8FB0. (very likely) show syntax error message
