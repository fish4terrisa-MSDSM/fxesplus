# Library builtins and BL-able addresses (functions).
# Also contains data labels.
# Does NOT include gadgets.

# Arguments are 0-indexing.
# All lines with '#' won't match the Lua pattern so they're effectively
# comments. Comment for something is put **after** it.

# ========= Library function

f_0F726		strcpy_nn
f_33864		strcat_nn
f_2B2A4		strlen_f
f_22294		memset_f
f_27568		memcpy_nf
f_32C74		strcat_fn
f_283AC		memcpy_nn
f_0A66E		memmove_nn
f_2904E		memcpy_fn
f_2B4E4		strlen_n
f_0F3C8		abs
f_0EC0A		strcpy_fn
f_21E36		memset_n

# ========= Smart functions (special case NULL)

f_203C2		smart_strcpy_nn
# copy to NULL = no-op, copy from NULL = ""
f_203B8		smart_strlen_n
# len(NULL) == 0

# ========= Calculator functions

f_08598		1line_print.col_0
# r0: col, r1: row, er2: address
.l_002		1line_print
f_08A8C		render.e3d4
.l_00C		render.ddd4
# copy content at (position) to screen
f_0939A		memzero
# at er0, er2 bytes, call memset
f_2157C		1line_print__size_14
# er2: adr, xpos = 0, ypos = r0; call 1line_print.col_0
# ???
f_26606		reset_routine
# I think so
f_24A3A		get_string_constant
# It appears that only [0xd12b]==0 makes sense
# Run `extract-table.py`. Decompiled.
f_2CFE0		f_2CFE0
.l_030		get_string_and_length
# from string index
f_08228		clear_screen
f_0851E		str_decompress_print
f_08668		1char_print.1byte_char
.l_00A		1char_print
# Print to buffer 2 (may be changed, I don't know)
# Return value: {char, char*} :
# number of char printed, end pointer
f_095AA		delay

f_0ACAA		ENTER
# backup registers, set frame pointer er14
f_0ACB2		LEAVE
# restore registers
# Usage: 'bl ENTER; ......; b LEAVE;'

f_099B6		_start
f_2AD84		main

f_08A5C		buf1_to_buf2
f_08A74		buf2_to_buf1
# copy between the two screen buffers (1 at 0xDDD4, 2 at 0xE3D4)
f_21740		save_all_regs # right before FP
f_2C86A		byte_strlen_n # strlen, but returns byte
f_0A6DA		max_input_len # 200 or 50 or 49

# ========= Real specific functions (KI/KO)

f_097DA		zero_KO
f_2140C		diagnostic_function
f_25604		diagnostic_section
# a section of diagnostic procedure
f_0AFEC		f_0AFEC
.l_058		real_wait_key
f_21750		compute_checksum
f_216A4		checksum_screen

# ========= Emulator specific functions (KI/KO)
f_22B16		emu_wait_key

# ========= Functions with not enough information

#f_08FB0		multiline decompress?
#.l_056			1 line print ??? or what? what's the difference with 8598 ?
#f_09028		Probably configure font size?
#f_09086		something call 8FB0. (very likely) show syntax error message

# ========= Data labels (also see the cheat table)

d_0D110		modifiers
# Ins(80)/Shift(8)/Alpha(4)/Sto(1)
d_0D111		mode
# C1comp.03stat.0Dsheet.88tab.45eqn.89ver.4Arat.0Ealg
d_0D112		sub_mode
d_0D137		font_size
